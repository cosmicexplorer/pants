package org.pantsbuild.native_image

import scala.meta.testkit.DiffAssertions
import org.scalatest.FunSuite
import coursier._
import java.io.File

class FindMacrosSuite extends FunSuite with DiffAssertions {
  test("expect") {
    val fetch = Fetch()
      .addDependencies(
        dep"org.scalatest:scalatest_2.12:3.0.8",
        dep"org.scalameta:metals_2.12:0.7.0",
        dep"org.apache.spark:spark-sql_2.12:2.4.3",
        dep"com.typesafe.akka:akka-http_2.11:10.1.9",
        dep"org.typelevel:cats-effect_2.12:2.0.0-RC1",
        dep"io.getquill:quill-core_2.12:3.4.2",
        dep"com.chuusai:shapeless_2.12:2.3.3"
      )
      .run()
    val obtained = FindMacros
      .run(fetch.mkString(File.pathSeparator))
      .toSeq
      .sorted
      .mkString("\n")
    val expected =
      """|
         |akka.http.ccompat.pre213macro$
         |akka.http.ccompat.since213macro$
         |akka.macros.LogHelper$
         |akka.parboiled2.DynamicRuleDispatch$
         |akka.parboiled2.ParserMacros$
         |cats.arrow.FunctionKMacros$
         |com.typesafe.scalalogging.LoggerMacro$
         |com.typesafe.scalalogging.LoggerTakingImplicitMacro$
         |fastparse.internal.MacroImpls$
         |fastparse.internal.MacroRepImpls$
         |io.getquill.ImplicitQueryMacro
         |io.getquill.context.ActionMacro
         |io.getquill.context.QueryMacro
         |io.getquill.dsl.DynamicQueryDslMacro
         |io.getquill.dsl.EncodingDslMacro
         |io.getquill.dsl.MetaDslMacro
         |io.getquill.dsl.QueryDslMacro
         |io.getquill.dsl.QuotationMacro
         |io.getquill.monad.IOMonadMacro
         |macrocompat.BundleMacro
         |org.scalactic.RequirementsMacro$
         |org.scalactic.SnapshotsMacro$
         |org.scalactic.anyvals.DigitCharMacro$
         |org.scalactic.anyvals.DigitMacro$
         |org.scalactic.anyvals.DigitStringMacro$
         |org.scalactic.anyvals.GuessANumberMacro$
         |org.scalactic.anyvals.PercentMacro$
         |org.scalactic.anyvals.PosDoubleMacro$
         |org.scalactic.anyvals.PosFloatMacro$
         |org.scalactic.anyvals.PosIntMacro$
         |org.scalactic.anyvals.PosLongMacro$
         |org.scalactic.anyvals.PosZDoubleMacro$
         |org.scalactic.anyvals.PosZFloatMacro$
         |org.scalactic.anyvals.PosZIntMacro$
         |org.scalactic.anyvals.PosZLongMacro$
         |org.scalactic.anyvals.TLAMacro$
         |org.scalactic.source.PositionMacro$
         |org.scalamacros.resetallattrs.Macros$
         |org.scalameta.UnreachableMacros
         |org.scalameta.adt.AdtNamerMacros
         |org.scalameta.adt.AdtTyperMacrosBundle
         |org.scalameta.adt.LiftableMacros
         |org.scalameta.data.DataMacros
         |org.scalameta.data.DataTyperMacrosBundle
         |org.scalameta.explore.ExploreMacros
         |org.scalameta.invariants.Macros
         |org.scalameta.tests.typecheckError$
         |org.scalatest.AssertionsMacro$
         |org.scalatest.CompileMacro$
         |org.scalatest.DiagrammedAssertionsMacro$
         |org.scalatest.ExpectationsMacro$
         |org.scalatest.matchers.MatchPatternMacro$
         |org.scalatest.matchers.MatcherFactory1$
         |org.scalatest.matchers.MatcherFactory2$
         |org.scalatest.matchers.MatcherFactory3$
         |org.scalatest.matchers.MatcherFactory4$
         |org.scalatest.matchers.MatcherFactory5$
         |org.scalatest.matchers.MatcherFactory6$
         |org.scalatest.matchers.MatcherFactory7$
         |org.scalatest.matchers.MatcherFactory8$
         |org.scalatest.matchers.TypeMatcherMacro$
         |perfolation.Macros$
         |pprint.TPrintLowPri$
         |scala.meta.internal.classifiers.ClassifierMacros
         |scala.meta.internal.fastparse.utils.MacroUtils$
         |scala.meta.internal.prettyprinters.ShowMacros
         |scala.meta.internal.quasiquotes.ConversionMacros
         |scala.meta.internal.quasiquotes.ReificationMacros
         |scala.meta.internal.tokens.RootNamerMacros
         |scala.meta.internal.tokens.TokenInfoMacros
         |scala.meta.internal.tokens.TokenNamerMacros
         |scala.meta.internal.transversers.TransformerMacros
         |scala.meta.internal.transversers.TraverserMacros
         |scala.meta.internal.trees.AstInfoMacros
         |scala.meta.internal.trees.AstNamerMacros
         |scala.meta.internal.trees.BranchNamerMacros
         |scala.meta.internal.trees.CommonTyperMacrosBundle
         |scala.meta.internal.trees.LiftableMacros
         |scala.meta.internal.trees.QuasiquoteMacros
         |scala.meta.internal.trees.RegistryMacros
         |scala.meta.internal.trees.RootNamerMacros
         |scribe.Macros$
         |scribe.ScribeMacros$
         |shapeless.AnnotationMacros
         |shapeless.CachedImplicitMacros
         |shapeless.CachedMacros
         |shapeless.DefaultMacros
         |shapeless.Generic1Macros
         |shapeless.GenericMacros
         |shapeless.IsCCons1Macros
         |shapeless.IsHCons1Macros
         |shapeless.LabelledMacros
         |shapeless.LazyMacrosRef
         |shapeless.LowPriorityMacros
         |shapeless.NatMacros
         |shapeless.OrphanMacros
         |shapeless.PolyMacros
         |shapeless.ProductMacros
         |shapeless.RecordMacros
         |shapeless.SingletonTypeMacros
         |shapeless.Split1Macros
         |shapeless.TestMacros
         |shapeless.TheMacros
         |shapeless.TypeOf$Macros
         |shapeless.TypeableMacros
         |shapeless.UnionMacros
         |shapeless.ops.nat$ToIntMacros
         |shapeless.ops.record.LacksKeyMacros
         |shapeless.ops.record.ModifierMacros
         |shapeless.ops.record.RemoverMacros
         |shapeless.ops.record.SelectorMacros
         |shapeless.ops.record.UpdaterMacros
         |shapeless.test.CompileTimeMacros
         |shapeless.test.IllTypedMacros
         |shapeless.test.TypeTraceMacros
         |sourcecode.Macros$
         |""".stripMargin
    assertNoDiffOrPrintExpected(obtained, expected)
  }
}
